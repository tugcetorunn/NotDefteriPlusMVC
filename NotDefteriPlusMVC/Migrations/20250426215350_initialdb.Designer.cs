// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotDefteriPlusMVC.Data;

#nullable disable

namespace NotDefteriPlusMVC.Migrations
{
    [DbContext(typeof(NotDefteriDbContext))]
    [Migration("20250426215350_initialdb")]
    partial class initialdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.Bolum", b =>
                {
                    b.Property<int>("BolumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BolumId"));

                    b.Property<string>("BolumAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FakulteId")
                        .HasColumnType("int");

                    b.HasKey("BolumId");

                    b.HasIndex("BolumAdi")
                        .IsUnique();

                    b.HasIndex("FakulteId");

                    b.ToTable("Bolumler");

                    b.HasData(
                        new
                        {
                            BolumId = 1,
                            BolumAdi = "Bilgisayar Mühendisliği",
                            FakulteId = 1
                        },
                        new
                        {
                            BolumId = 2,
                            BolumAdi = "Endüstri Mühendisliği",
                            FakulteId = 1
                        },
                        new
                        {
                            BolumId = 3,
                            BolumAdi = "Elektrik Elektronik Mühendisliği",
                            FakulteId = 1
                        },
                        new
                        {
                            BolumId = 4,
                            BolumAdi = "Makine Mühendisliği",
                            FakulteId = 1
                        },
                        new
                        {
                            BolumId = 5,
                            BolumAdi = "İşletme",
                            FakulteId = 2
                        },
                        new
                        {
                            BolumId = 6,
                            BolumAdi = "İktisat",
                            FakulteId = 2
                        },
                        new
                        {
                            BolumId = 7,
                            BolumAdi = "Hukuk",
                            FakulteId = 3
                        },
                        new
                        {
                            BolumId = 8,
                            BolumAdi = "Psikoloji",
                            FakulteId = 4
                        },
                        new
                        {
                            BolumId = 9,
                            BolumAdi = "Sosyoloji",
                            FakulteId = 4
                        },
                        new
                        {
                            BolumId = 10,
                            BolumAdi = "Biyoloji",
                            FakulteId = 5
                        },
                        new
                        {
                            BolumId = 11,
                            BolumAdi = "Kimya",
                            FakulteId = 5
                        });
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.BolumDers", b =>
                {
                    b.Property<int>("BolumId")
                        .HasColumnType("int");

                    b.Property<int>("DersId")
                        .HasColumnType("int");

                    b.HasKey("BolumId", "DersId");

                    b.HasIndex("DersId");

                    b.ToTable("BolumDers");

                    b.HasData(
                        new
                        {
                            BolumId = 1,
                            DersId = 1
                        },
                        new
                        {
                            BolumId = 1,
                            DersId = 2
                        },
                        new
                        {
                            BolumId = 2,
                            DersId = 3
                        },
                        new
                        {
                            BolumId = 2,
                            DersId = 4
                        },
                        new
                        {
                            BolumId = 3,
                            DersId = 5
                        },
                        new
                        {
                            BolumId = 3,
                            DersId = 6
                        },
                        new
                        {
                            BolumId = 4,
                            DersId = 7
                        },
                        new
                        {
                            BolumId = 4,
                            DersId = 8
                        },
                        new
                        {
                            BolumId = 5,
                            DersId = 9
                        },
                        new
                        {
                            BolumId = 5,
                            DersId = 10
                        },
                        new
                        {
                            BolumId = 1,
                            DersId = 11
                        },
                        new
                        {
                            BolumId = 1,
                            DersId = 12
                        },
                        new
                        {
                            BolumId = 2,
                            DersId = 11
                        },
                        new
                        {
                            BolumId = 2,
                            DersId = 12
                        },
                        new
                        {
                            BolumId = 3,
                            DersId = 11
                        },
                        new
                        {
                            BolumId = 3,
                            DersId = 12
                        },
                        new
                        {
                            BolumId = 4,
                            DersId = 11
                        },
                        new
                        {
                            BolumId = 4,
                            DersId = 12
                        });
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.Ders", b =>
                {
                    b.Property<int>("DersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DersId"));

                    b.Property<string>("DersAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DersId");

                    b.ToTable("Dersler");

                    b.HasData(
                        new
                        {
                            DersId = 1,
                            DersAdi = "Veri Yapıları"
                        },
                        new
                        {
                            DersId = 2,
                            DersAdi = "Algoritmalar"
                        },
                        new
                        {
                            DersId = 3,
                            DersAdi = "İstatistik"
                        },
                        new
                        {
                            DersId = 4,
                            DersAdi = "Mikroekonomi"
                        },
                        new
                        {
                            DersId = 5,
                            DersAdi = "Ceza Hukuku"
                        },
                        new
                        {
                            DersId = 6,
                            DersAdi = "Medeni Hukuk"
                        },
                        new
                        {
                            DersId = 7,
                            DersAdi = "Psikolojiye Giriş"
                        },
                        new
                        {
                            DersId = 8,
                            DersAdi = "Sosyolojiye Giriş"
                        },
                        new
                        {
                            DersId = 9,
                            DersAdi = "Biyolojiye Giriş"
                        },
                        new
                        {
                            DersId = 10,
                            DersAdi = "Kimyaya Giriş"
                        },
                        new
                        {
                            DersId = 11,
                            DersAdi = "Fizik"
                        },
                        new
                        {
                            DersId = 12,
                            DersAdi = "Matematik"
                        });
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.Fakulte", b =>
                {
                    b.Property<int>("FakulteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FakulteId"));

                    b.Property<string>("FakulteAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FakulteId");

                    b.ToTable("Fakulteler");

                    b.HasData(
                        new
                        {
                            FakulteId = 1,
                            FakulteAdi = "Mühendislik Fakültesi"
                        },
                        new
                        {
                            FakulteId = 2,
                            FakulteAdi = "İktisadi ve İdari Bilimler Fakültesi"
                        },
                        new
                        {
                            FakulteId = 3,
                            FakulteAdi = "Edebiyat Fakültesi"
                        },
                        new
                        {
                            FakulteId = 4,
                            FakulteAdi = "Teknoloji Fakültesi"
                        },
                        new
                        {
                            FakulteId = 5,
                            FakulteAdi = "Güzel Sanatlar Fakültesi"
                        });
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.Kullanici", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.KullaniciBolum", b =>
                {
                    b.Property<int>("BolumId")
                        .HasColumnType("int");

                    b.Property<string>("KullaniciId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BolumId", "KullaniciId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("KullaniciBolum");
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.Not", b =>
                {
                    b.Property<int>("NotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotId"));

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("BolumId")
                        .HasColumnType("int");

                    b.Property<int>("DersId")
                        .HasColumnType("int");

                    b.Property<string>("DosyaYolu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GuncellenmeTarihi")
                        .HasColumnType("date");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("date");

                    b.HasKey("NotId");

                    b.HasIndex("BolumId");

                    b.HasIndex("DersId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Notlar");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("NotDefteriPlusMVC.Models.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("NotDefteriPlusMVC.Models.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotDefteriPlusMVC.Models.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("NotDefteriPlusMVC.Models.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.Bolum", b =>
                {
                    b.HasOne("NotDefteriPlusMVC.Models.Fakulte", "Fakulte")
                        .WithMany("Bolumler")
                        .HasForeignKey("FakulteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fakulte");
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.BolumDers", b =>
                {
                    b.HasOne("NotDefteriPlusMVC.Models.Bolum", "Bolum")
                        .WithMany("Dersler")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotDefteriPlusMVC.Models.Ders", "Ders")
                        .WithMany("Bolumler")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolum");

                    b.Navigation("Ders");
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.KullaniciBolum", b =>
                {
                    b.HasOne("NotDefteriPlusMVC.Models.Bolum", "Bolum")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotDefteriPlusMVC.Models.Kullanici", "Kullanici")
                        .WithMany("Bolumler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolum");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.Not", b =>
                {
                    b.HasOne("NotDefteriPlusMVC.Models.Bolum", "Bolum")
                        .WithMany()
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotDefteriPlusMVC.Models.Ders", "Ders")
                        .WithMany("Notlar")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotDefteriPlusMVC.Models.Kullanici", "Kullanici")
                        .WithMany("Notlar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolum");

                    b.Navigation("Ders");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.Bolum", b =>
                {
                    b.Navigation("Dersler");

                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.Ders", b =>
                {
                    b.Navigation("Bolumler");

                    b.Navigation("Notlar");
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.Fakulte", b =>
                {
                    b.Navigation("Bolumler");
                });

            modelBuilder.Entity("NotDefteriPlusMVC.Models.Kullanici", b =>
                {
                    b.Navigation("Bolumler");

                    b.Navigation("Notlar");
                });
#pragma warning restore 612, 618
        }
    }
}
